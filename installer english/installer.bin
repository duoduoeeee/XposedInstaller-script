#!/sbin/sh
#Modified updater-binary by iicc to install Xposed without a custom recovery
#All thanks come to rovo89, the developer of Xposed
#XDA link: http://forum.xda-developers.com/showthread.php?t=3034811
#HTCmania link: http://www.htcmania.com/showthread.php?t=1020123
#
# This script installs the Xposed framework files to the system partition.
# The Xposed Installer app is needed as well to manage the installed modules.
#
# Thanks to Chainfire for some of the functions and logic!
#############
#GitHub link: https://github.com/iicc1/XposedInstaller-script
#############



#Making log output
mount -o rw,remount /
mount -o rw,remount /storage/emulated
if [ ! -f "/test.txt" ]; then
	> /test.txt
	rm /sdcard/XposedInstallerLog.txt
	sh /sdcard/installer.bin 2> /sdcard/XposedInstallerLog.txt
	exit 1
fi

rm /test.txt

#Checking Xposed zip
CHECK=`ls /sdcard/xposed-v*.zip`
if [ $? != 0 ]; then
	echo -e "\033[31mError: Xposed zip not found in /sdcard\e[0m"
	echo ""
	sleep 2
	exit 1
fi


#Getting system properties
VERSION=`\ls /sdcard/xposed-v* | cut -c 16-18`
SDK=`\ls /sdcard/xposed-v* | cut -c 23-24`
TRUE64=0
TRUEXPOSEDBITS64=0
BITS64=`cat /system/build.prop | grep -c "arm64"`
XPOSEDBITS64=`\ls /sdcard/xposed-v* | grep -c "arm64"`
API=$(cat /system/build.prop | grep "ro.build.version.sdk=" | dd bs=1 skip=21 count=2)
BRAND=`\cat /system/build.prop | grep "ro.product.brand" | cut -c 18-`
MODEL=`\cat /system/build.prop | grep "ro.product.model" | cut -c 18-`
cat /system/build.prop | grep "ro.build.display.id" > rom.txt
cat rom.txt | cut -c22-
ROM=`\cat /system/build.prop | grep "ro.build.display.id" | cut -c21-`
rm -rf rom.txt
if [ $BITS64 > 0 ]; then
	TRUE64=64
else
	TRUE64=0
fi
if [ $XPOSEDBITS64 = 1 ]; then
	TRUEXPOSEDBITS64=64
else
	TRUEXPOSEDBITS64=0
fi
echo ""
echo ""
clear
echo ""
echo ""
echo ""
echo ""
if [ "$BRAND" == "Meizu" ]; then
 echo -e "\e[1;4mDevice information:\e[0m\n\e[93mBrand: \e[33m$BRAND\n\e[93mModel: \e[33m$MODEL\n\e[93mRom: \e[33m$ROM\e[0m"
echo ""
echo ""
fi
busybox echo -e "      \e[00;41m             Xposed installer          \e[00;37;40m"
busybox echo -e "      \e[31m  --------------------------------------- \e[00;37;40m"
busybox echo -e "      \e[31m     --------------------------------    \e[00;37;40m"
busybox echo -e "      \e[01;34m                 by iicc                \e[00;37;40m"
sleep 2.2
sleep 0.5
echo""
echo ""
echo -n "           \e[1;35mÂ¿Do you really want to install Xposed?\e[0m

                  \e[1;34mSelect an option:\e[0m


                    \e[1;32m[ Yes = 1\e[0m \e[1;33m|\e[0m \e[1;31mNo = 2 ]\e[0m


                             "
read option
if [ $option != 1 ]; then
  sleep 2.5
  clear
	echo "\033[31mExiting...\e[0m"
	sleep 3
	clear
  exit 1
else
 sleep 2
fi


 #Displaying Xposed information
 echo ""
 echo -e "\e[104mYou are installing Xposed $VERSION for SDK $SDK\e[0m\n\n\e[104mIf it is not the correct one it wont be installed\e[0m\n"
 echo ""
 echo -e "\e[44mRemember:\e[0m\n \n \e[96mSDK 21 --> Android 5.0\n SDK 22 --> Android 5.1\n SDK 23 --> Android 6.0\e[0m"
 echo ""
 echo ""
 sleep 3
 echo -e "\e[34mPress 1 to continue:\n\n                 \e[25m"
 sleep 1
 read option
 if [ $option != 1 ]; then
   sleep 2.5
   clear
 	echo -e "\e[91mExiting...\e[0m"
 	sleep 3
 	clear
   exit 0
 fi
 sleep 2.5
 if [ -f /system/xbin/busybox ]; then
	 echo "\e[92m-Busybox correctly installed in Xbin.\e[0m"
	 sleep 1.5
 else
	 echo -e"\e[91mError: Busybox not installed.\e[0m"
	 echo ""
	 sleep 2
	 exit 1
 fi
 echo ""
 echo ""
 if [ $SDK != $API ]; then
 	echo -e "\e[91mError\n SDK needed: $API\n SDK you try to install: $SDK\e[0m"
 	echo -e "\e[91mDownload the correct zip, with SDK $API!\e[0m"
 	sleep 3
 	exit 0

 else
 echo -e "\e[92m-The Xposed SDK is the correct one ($SDK).\e[0m"
 sleep 3
 fi
	echo ""
	echo ""
	if [ $TRUE64 = $TRUEXPOSEDBITS64 ]; then
		if [ $TRUE64 = 64 ]; then
			echo -e "\e[92m-The cpu architecture is 64 Bits\e[0m\n\e[92mThe same as the Xposed you try to install.\e[0m"
			echo ""
			echo ""
			sleep 2.6
		else
			echo -e "\e[92m-The cpu architecture is 32 Bits\e[0m\n\e[92mThe same as the Xposed you try to install.\e[0m"
			echo ""
			echo ""
			sleep 2.6
fi
fi
if [ $TRUE64 != $TRUEXPOSEDBITS64 ]; then
	echo -e "\e[91mThe cpu architecture and the Xposed version are different.\e[0m"
	echo -e "\e[91mPlease download the correct zip.\e[0m"
	echo ""
	sleep 2
	exit 0
fi

	echo ""
	echo ""
	sleep 1.2
	echo -e "\e[96mMounting partitions...\e[0m"
	echo ""
	sleep 0.5
	mount -o rw,remount /system
	mount -o rw,remount /
	echo -e "\e[96mCreating directories...\e[0m"
	echo ""
	echo -e "\e[96mDecompressing files...\e[0m"
	mkdir -p /tmp/xposed
	sleep 1
	unzip -o /sdcard/xposed-v* -d /tmp/xposed
	sleep 1
	echo ""
sleep 3

OUTFD=$2
ZIP=$3

SYSTEMLIB=/system/lib
ch_con_ext() {
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox chcon $2 $1
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox chcon $2 $1
  chcon $2 $1
}

ln_ext() {
  LD_LIBRARY_PATH=$SYSTEMLIB /system/toolbox ln -s $1 $2
  LD_LIBRARY_PATH=$SYSTEMLIB /system/bin/toolbox ln -s $1 $2
  ln -s $1 $2
}

set_perm() {
  chown $1.$2 $4
  chown $1:$2 $4
  chmod $3 $4
  ch_con $4
  ch_con_ext $4 $5
}

cp_perm() {
  rm $5
  cat $4 > $5
  set_perm $1 $2 $3 $5 $6
}

install_and_link() {
  TARGET=$1
  XPOSED="${1}_xposed"
  BACKUP="${1}_original"
  if [ ! -f "/tmp/xposed/$XPOSED" ]; then
    return
  fi
  cp_perm $2 $3 $4 /tmp/xposed/$XPOSED $XPOSED $5
  if [ ! -f $BACKUP ]; then
    mv $TARGET $BACKUP
    ln_ext $XPOSED $TARGET
  fi
}

install_overwrite() {
  TARGET=$1
  if [ ! -f "/tmp/xposed/$TARGET" ]; then
    return
  fi
  BACKUP="${1}.orig"
  NO_ORIG="${1}.no_orig"
  if [ ! -f $TARGET ]; then
    echo -n > $NO_ORIG
  elif [ ! -f $BACKUP -a ! -f $NO_ORIG ]; then
    mv $TARGET $BACKUP
  fi
  cp_perm $2 $3 $4 /tmp/xposed/$TARGET $TARGET $5
}

cd /tmp/xposed

if [ ! -f "/tmp/xposed/system/xposed.prop" ]; then
  echo "! Failed: /tmp/xposed/system/xposed not found!"
  exit 1
fi
echo -e "\e[96mChecking Xposed...\e[0m"
echo ""
ABI=$(cat /system/build.prop /default.prop | grep -m 1 "ro.product.cpu.abi=" | dd bs=1 skip=19 count=3)
ABILONG=$(cat /system/build.prop /default.prop | grep -m 1 "ro.product.cpu.abi=" | dd bs=1 skip=19)
ABI2=$(cat /system/build.prop /default.prop | grep -m 1 "ro.product.cpu.abi2=" | dd bs=1 skip=20 count=3)

XVERSION=$(grep -m 1 "^version=" /tmp/xposed/system/xposed.prop | dd bs=1 skip=8)
XARCH=$(grep -m 1 "^arch=" /tmp/xposed/system/xposed.prop | dd bs=1 skip=5)
XMINSDK=$(grep -m 1 "^minsdk=" /tmp/xposed/system/xposed.prop | dd bs=1 skip=7)
XMAXSDK=$(grep -m 1 "^maxsdk=" /tmp/xposed/system/xposed.prop | dd bs=1 skip=7)

ARCH=arm
IS64BIT=false
RC=0
if [ "$ABI" = "x86" ]; then ARCH=x86; fi;
if [ "$ABI2" = "x86" ]; then ARCH=x86; fi;
if [ "$API" -eq "$API" ]; then
  if [ "$API" -ge "21" ]; then
    if [ "$ABILONG" = "arm64-v8a" ]; then ARCH=arm64; SYSTEMLIB=/system/lib64; IS64BIT=true; fi;
    if [ "$ABILONG" = "x86_64" ]; then ARCH=x64; SYSTEMLIB=/system/lib64; IS64BIT=true; fi;
  fi
fi




XVALID=false
if [ "$ARCH" = "$XARCH" ]; then
  if [ "$API" -ge "$XMINSDK" ]; then
    if [ "$API" -le "$XMAXSDK" ]; then
      XVALID=true
    else
      echo "!Wrong SDK version: $API, expected $XMINSDK - $XMAXSDK"
    fi
  else
    echo "!Wrong SDK version: $API, expected $XMINSDK - $XMAXSDK"
  fi
else
  echo "!Wrong platform: $ARCH, expected: $XARCH"
fi

if ($XVALID); then
  echo -e "\e[96mMoving files...\e[0m"
	sleep 2

  cat /system/bin/toolbox > /system/toolbox
  chmod 0755 /system/toolbox

  cp_perm 0 0 0644 /tmp/xposed/system/xposed.prop /system/xposed.prop 2>/dev/null
  cp_perm 0 0 0644 /tmp/xposed/system/framework/XposedBridge.jar /system/framework/XposedBridge.jar 2>/dev/null

  install_and_link /system/bin/app_process32                0 2000 0755 u:object_r:zygote_exec:s0 2>/dev/null
  install_overwrite /system/bin/dex2oat                     0 2000 0755 u:object_r:dex2oat_exec:s0 2>/dev/null
  install_overwrite /system/bin/oatdump                     0 2000 0755 2>/dev/null
  install_overwrite /system/bin/patchoat                    0 2000 0755 u:object_r:dex2oat_exec:s0 2>/dev/null
  install_overwrite /system/lib/libart.so                   0    0 0644 2>/dev/null
  install_overwrite /system/lib/libart-compiler.so          0    0 0644 2>/dev/null
  install_overwrite /system/lib/libart-disassembler.so      0    0 0644 2>/dev/null
  install_overwrite /system/lib/libsigchain.so              0    0 0644 2>/dev/null
  install_overwrite /system/lib/libxposed_art.so            0    0 0644 2>/dev/null
  if ($IS64BIT); then
    install_and_link /system/bin/app_process64              0 2000 0755 u:object_r:zygote_exec:s0 2>/dev/null
    install_overwrite /system/lib64/libart.so               0    0 0644 2>/dev/null
    install_overwrite /system/lib64/libart-compiler.so      0    0 0644 2>/dev/null
    install_overwrite /system/lib64/libart-disassembler.so  0    0 0644 2>/dev/null
    install_overwrite /system/lib64/libsigchain.so          0    0 0644 2>/dev/null
    install_overwrite /system/lib64/libxposed_art.so        0    0 0644 2>/dev/null

  fi

  rm /system/toolbox
else
  echo "!Please download the correct package"
  echo "!for your platform/ROM!"
  RC=1
fi

rm -r /tmp/xposed
echo "\n\n"
sleep 1.4
echo "\e[94mEnd of the instalation"
sleep 0.9
echo ""
echo "Now go to Xposed app and do a soft reboot"
sleep 0.9
echo "When the system initiates, it will be optimizing apps"
sleep 0.9
echo "Depending on the number of installed apps,"
echo "it will take seconds to hours"
sleep 0.9
echo "If everything is ok, Xposed will be active."
sleep 1.5
echo ""
echo "A log of the instalation has been created"
echo "in /sdcard"
sleep 1.3
echo ""
echo "Regards!\e[0m"
echo ""
sleep 1
exit 1
